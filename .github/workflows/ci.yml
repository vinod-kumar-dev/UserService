name: .NET CI with SonarQube

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Set up .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0

    # 3. Install SonarScanner
    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    # 4. Add SonarScanner to PATH
    - name: Add SonarScanner to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    # 5. SonarQube Analysis (BEGIN)
    - name: SonarQube Begin Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin \
          /k:"UserServiceWithTest" \
          /d:sonar.host.url="http://localhost:9000" \
          /d:sonar.login=$SONAR_TOKEN

    # 6. Restore dependencies
    - name: Restore Dependencies
      run: dotnet restore

    # 7. Build Web API
    - name: Build Web API
      run: dotnet build UserService/UserService.csproj --no-restore --configuration Release

    # 8. Build NUnit Test Library
    - name: Build Test Library
      run: dotnet build UserService.Test/UserService.Test.csproj --no-restore --configuration Release

    # 9. Run Tests
    - name: Run Tests
      run: dotnet test UserService.Test/UserService.Test.csproj --no-build --configuration Release --logger "trx"

    # 10. SonarQube Analysis (END)
    - name: SonarQube End Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet sonarscanner end /d:sonar.login=$SONAR_TOKEN
